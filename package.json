{
  "name": "teensysecurity",
  "displayName": "TeensySecurity",
  "description": "Teensy Security",
  "version": "0.0.1",
  "engines": {
    "vscode": "^1.93.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/PaulStoffregen/secure_plugin_vscode.git"
  },
  "activationEvents": [
    "onView:teensysecurity.setupView"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "teensysecurity.createKey",
        "title": "Generate Key",
        "category": "Teensy Security"
      },
      {
        "command": "teensysecurity.showKeyPath",
        "title": "Show Key Location",
        "category": "Teensy Security"
      },
      {
        "command": "teensysecurity.fuseWriteSketch",
        "title": "Step 1 - Fuse Write Sketch",
        "category": "Teensy Security"
      },
      {
        "command": "teensysecurity.verifySketch",
        "title": "Step 2 - Verify Sketch",
        "category": "Teensy Security"
      },
      {
        "command": "teensysecurity.lockSecuritySketch",
        "title": "Step 3 - Lock Security Sketch",
        "category": "Teensy Security"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "teensy-4-security",
          "title": "Teensy 4 Security",
          "icon": "resources/key-svgrepo-com.svg"
        }
      ]
    },
    "views": {
      "teensy-4-security": [
        {
          "id": "teensysecurity.setupView",
          "name": "Teensy 4 Security"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "teensysecurity.setupView",
        "contents": "1. Encryption Setup\n\nCreate a new encryption key. The key will be written at the path below. Keep this file secret. Anyone who obtains key.pem could decrypt your code. Make backups, as no way exists to recover this file.\n[Generate Key](command:teensysecurity.createKey)",
        "enablement": "teensysecurity.state == installed"
      },
      {
        "view": "teensysecurity.setupView",
        "contents": "[Click](command:teensysecurity.showKeyPath) to show the location of the key.pem file.\n\nNormal code is stored in a \".HEX\" file an encrypted code is stored in an \".EHEX\" file. Both are created with every compile when key.pem exists at this path.",
        "enablement": "teensysecurity.state == installed && teensysecurity.hasKeyFile"
      },
      {
        "view": "teensysecurity.setupView",
        "contents": "2. Teensy Hardware Setup\n\nWrite your encryption key to Teensy's permanent fuse memory. After the key written, Teensy can run both normal and encrypted programs.\n[Fuse Write Sketch](command:teensysecurity.fuseWriteSketch)\n\nVerify an encrypted program runs properly.\n[Verify Sketch](command:teensysecurity.verifySketch)\n\nPermanently lock secure mode. Once locked, Teensy will only be able to run programs encrypted by your key, and JTAG access is disabled. This step is required for full security.\n[Lock Security Sketch](command:teensysecurity.lockSecuritySketch)",
        "enablement": "teensysecurity.state == installed && teensysecurity.hasKeyFile"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile && npm run bundle",
    "prebundle": "rimraf dist",
    "bundle": "webpack",
    "compile": "tsc -p ./",
    "watch": "webpack --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.7",
    "@types/node": "20.x",
    "@types/vscode": "^1.93.0",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@typescript-eslint/parser": "^8.3.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.9.1",
    "rimraf": "^5.0.1",
    "ts-loader": "^9.4.2",
    "typescript": "^5.5.4",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "vscode-arduino-api": "^0.1.2"
  }
}
